version: '3.6'
services:
  gitlab:
    image: gitlab/gitlab-ce:16.9.1-ce.0
    container_name: gitlab
    restart: always
    hostname: 'gitlab'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        # Add any other gitlab.rb configuration here, each on its own line
        external_url 'http://localhost'
        puma['worker_processes'] = 0
        sidekiq['max_concurrency'] = 10
        prometheus_monitoring['enable'] = false
        gitlab_rails['env'] = {'MALLOC_CONF' => 'dirty_decay_ms:1000,muzzy_decay_ms:1000'}
        gitaly['env'] = {'MALLOC_CONF' => 'dirty_decay_ms:1000,muzzy_decay_ms:1000','GITALY_COMMAND_SPAWN_MAX_PARALLEL' => '2'}
    ports:
      - '80:80'
      - '443:443'
      - '22:22'
    volumes:
      - '$GITLAB_HOME/config:/etc/gitlab'
      - '$GITLAB_HOME/logs:/var/log/gitlab'
      - '$GITLAB_HOME/data:/var/opt/gitlab'
    shm_size: '256m'
  #runner:
  #  image: gitlab/gitlab-runner:latest
  #  restart: always
  #  container_name: gitlab_runner
  #  depends_on:
  #   - gitlab
  #  environment:
  #    - CI_SERVER_URL=http://gitlab/
  #  volumes:
  #    - /srv/gitlab-runner/config:/etc/gitlab-runner
  #    - /var/run/docker.sock:/var/run/docker.sock:rw
  sonarqube:
    image: sonarqube:community
    depends_on:
      - db
      - gitlab
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"
  db:
    image: postgres:12
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data: